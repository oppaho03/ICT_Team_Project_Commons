/* by. PYS Account / oracle
*/

/* SEQUENCE */
-- AUTO_INCRMENT 대체 시퀀스(SEQUENCE)
-- START WITH 1 : 시작값 
-- INCREMENT BY 1 : 증가값 (+1)
-- MINVALUE 1 : 최소값 
-- MAXVALUE 9999 : 최댓값 
-- NOCACHE : CACHE 사용 유무
-- NOCYCLE : 최댓값 도달 시 시작값 부터 다시 반복 여부 
-- NOORDER : 요청 순서대로 값을 생성할지 여부 
CREATE SEQUENCE __NAME
START WITH 1 
INCREMENT BY 1 
NOCACHE 
NOCYCLE;

/* TRIGGER */
/* 
-- 기초 문법
CREATE [OR REPLACE] Trigger 트리거명
  Before (or After)
  UPDATE OR DELETE OR INSERT ON 테이블명 --Trigger_event
  [FOR EACH ROW]
DECLARE
  --변수선언부
BEGIN
  --프로그램 코딩부
END;
*/

/* OTHER TIPS
-- ALTER TABLE 테이블_이름 MODIFY 테이블_컬럼명 값;

-- CLOB : '' 값 대신 EMPTY_CLOB() 사용
-- CLOB : TO_CLOB('값') 
-- TIMESTAMP : SYSDATE 현재 일자
*/


/* TABLE: USERS */
-- CREATE SEQUENCE
CREATE SEQUENCE APP_USERS_ID_SEQ
START WITH 1 
INCREMENT BY 1 
NOCACHE 
NOCYCLE;

-- CREATE TABLE
CREATE TABLE app_users (
    id NUMBER(20) PRIMARY KEY,
    user_email VARCHAR2(100) NOT NULL UNIQUE,
    user_pass VARCHAR2(255) DEFAULT '' NULL, 
    user_nicname VARCHAR2(50) DEFAULT '' NULL,
    user_activation_key VARCHAR2(255) DEFAULT '' NULL,
    user_registered TIMESTAMP DEFAULT TO_DATE('1970-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') NOT NULL,
    user_status NUMBER DEFAULT 0 NOT NULL
);

-- ALTER TABLE app_users ADD CONSTRAINT pk_app_users PRIMARY KEY (id); 
CREATE INDEX idx_app_users_user_email ON app_users( user_email );
CREATE INDEX idx_app_users_user_nicname ON app_users( user_nicname );
-- DROP INDEX idx_app_users_user_nicname;

-- CREATE TRIGGER 
CREATE OR REPLACE TRIGGER app_users_trigger 
BEFORE INSERT ON app_users 
FOR EACH ROW 
WHEN (NEW.id IS NULL)
BEGIN 
    SELECT APP_USERS_ID_SEQ.NEXTVAL INTO :NEW.id FROM DUAL; 
END; 
/



/* TABLE: USERMETA  */
-- GENERATED ALWAYS AS IDENTITY : AUTO_INCREMENT 대체 ( 자동 입력만 허용 )
-- GENERATED BY DEFAULT AS IDENTITY : AUTO_INCREMENT 대체 ( 수동/자동 입력 허용 )
-- > TRUNCATE TABLE 테이블_이름; : 카운터 초기화
-- > ALTER TABLE 테이블_이름 MODIFY 테이블_컬럼명 GENERATED ALWAYS AS IDENTITY (START WITH 1);
CREATE TABLE app_usermeta (
    meta_id NUMBER(20,0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY, -- AUTO_INCREMENT 대체
    user_id NUMBER(20,0) DEFAULT 0 NOT NULL,
    meta_key VARCHAR2(255),
    meta_value CLOB DEFAULT EMPTY_CLOB(), -- longtext 대체
    CONSTRAINT fk_app_usermeta_user FOREIGN KEY (user_id) REFERENCES app_users(id) ON DELETE CASCADE
);

-- INDEX 생성 
ALTER TABLE app_usermeta ADD CONSTRAINT pk_app_usermeta PRIMARY KEY (meta_id); 
CREATE INDEX idx_app_usermeta_user_id ON app_usermeta( user_id );
-- CREATE INDEX idx_app_usermeta_meta_key ON app_usermeta (SUBSTR(meta_key, 1, 191));



/* TABLE: POSTS  */
-- CREATE SEQUENCE
CREATE SEQUENCE APP_POSTS_ID_SEQ 
START WITH 1 
INCREMENT BY 1 
NOCACHE
NOCYCLE;

CREATE TABLE app_posts (
    id NUMBER(20,0) PRIMARY KEY,
    guid VARCHAR2(255) DEFAULT '' NOT NULL,
    post_parent NUMBER(20) DEFAULT 0 NOT NULL,
    post_author NUMBER(20, 0) DEFAULT 0 NOT NULL,
    post_type VARCHAR2(20) DEFAULT 'post' NOT NULL,
    post_mime_type VARCHAR2(100) DEFAULT '' NOT NULL,
    post_title CLOB NOT NULL, 
    post_content CLOB DEFAULT EMPTY_CLOB(),
    post_excerpt CLOB DEFAULT EMPTY_CLOB(),        
    post_status VARCHAR2(20) DEFAULT 'publish' NOT NULL, 
    post_pass VARCHAR2(255) DEFAULT '' NOT NULL,
    post_name VARCHAR2(200) DEFAULT '' NOT NULL,
    post_date TIMESTAMP DEFAULT TO_DATE('1970-01-01', 'YYYY-MM-DD') NOT NULL,
    post_date_gmt TIMESTAMP DEFAULT TO_DATE('1970-01-01', 'YYYY-MM-DD') NOT NULL,
    post_modified TIMESTAMP DEFAULT TO_DATE('1970-01-01', 'YYYY-MM-DD') NOT NULL,
    post_modified_gmt TIMESTAMP DEFAULT TO_DATE('1970-01-01', 'YYYY-MM-DD') NOT NULL,    
    comment_status VARCHAR2(20) DEFAULT 'open' NOT NULL,
    comment_count NUMBER(20) DEFAULT '' NOT NULL,
    menu_order NUMBER DEFAULT 0 NOT NULL,
    
    CONSTRAINT fk_app_posts_post_parent FOREIGN KEY (post_parent) REFERENCES app_posts(id)
);


CREATE INDEX idx_app_posts_post_name ON app_posts (post_name);
CREATE INDEX idx_app_posts_post_parent ON app_posts (post_parent);
CREATE INDEX idx_app_posts_post_author ON app_posts (post_author);
CREATE INDEX idx_app_posts_post_type ON app_posts (post_type);
CREATE INDEX idx_app_posts_type_status_date ON app_posts (post_type, post_status, post_date, id);


-- CREATE TRIGGER 
CREATE OR REPLACE TRIGGER app_posts_trigger 
BEFORE INSERT ON app_posts 
FOR EACH ROW 
WHEN (NEW.id IS NULL)
BEGIN 
    SELECT APP_POSTS_ID_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
    
    IF :NEW.post_content IS NULL THEN
        :NEW.post_content := EMPTY_CLOB();
    END IF;
    
    IF :NEW.post_excerpt IS NULL THEN
        :NEW.post_excerpt := EMPTY_CLOB();
    END IF;
END; 
/



/* TABLE: POSTMETA  */
-- GENERATED ALWAYS AS IDENTITY : AUTO_INCREMENT 대체 ( 자동 입력만 허용 )
-- GENERATED BY DEFAULT AS IDENTITY : AUTO_INCREMENT 대체 ( 수동/자동 입력 허용 )
-- > TRUNCATE TABLE 테이블_이름; : 카운터 초기화
-- > ALTER TABLE 테이블_이름 MODIFY 테이블_컬럼명 GENERATED ALWAYS AS IDENTITY (START WITH 1);
CREATE TABLE app_postmeta (
    meta_id NUMBER(20,0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    post_id NUMBER(20,0) DEFAULT 0 NOT NULL,
    meta_key VARCHAR2(255),
    meta_value CLOB DEFAULT EMPTY_CLOB(), 
    CONSTRAINT fk_app_postmeta_post FOREIGN KEY (post_id) REFERENCES app_posts(id) ON DELETE CASCADE
);

CREATE INDEX idx_app_postmeta_post_id ON app_postmeta( post_id );



/* TABLE: TERMS  */
-- GENERATED ALWAYS AS IDENTITY : AUTO_INCREMENT 대체 ( 자동 입력만 허용 )
-- GENERATED BY DEFAULT AS IDENTITY : AUTO_INCREMENT 대체 ( 수동/자동 입력 허용 )
-- > TRUNCATE TABLE 테이블_이름; : 카운터 초기화
-- > ALTER TABLE 테이블_이름 MODIFY 테이블_컬럼명 GENERATED ALWAYS AS IDENTITY (START WITH 1);
CREATE TABLE app_terms (
    term_id NUMBER(20,0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY, 
    name VARCHAR2(200) DEFAULT '' NOT NULL, -- `varchar(200)` 
    slug VARCHAR2(200) DEFAULT '' NOT NULL, -- `varchar(200)`
    term_group NUMBER(20,0) DEFAULT 0 NOT NULL -- `bigint` -> `NUMBER(20,0)`
);



/* TABLE: TERMMETA  */
-- GENERATED ALWAYS AS IDENTITY : AUTO_INCREMENT 대체 ( 자동 입력만 허용 )
-- GENERATED BY DEFAULT AS IDENTITY : AUTO_INCREMENT 대체 ( 수동/자동 입력 허용 )
-- > TRUNCATE TABLE 테이블_이름; : 카운터 초기화
CREATE TABLE app_termmeta (
    meta_id NUMBER(20, 0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    term_id NUMBER(20,0) DEFAULT 0 NOT NULL,
    meta_key VARCHAR2(255),
    meta_value CLOB DEFAULT EMPTY_CLOB(),
    CONSTRAINT fk_app_termmeta_term FOREIGN KEY (term_id) REFERENCES app_terms(term_id) ON DELETE CASCADE
);

CREATE INDEX idx_app_termmeta_term_id ON app_termmeta( term_id );

-- CREATE TRIGGER 
-- CLOB : EMPTY_CLOB()처리
CREATE OR REPLACE TRIGGER app_termmeta_trigger
BEFORE INSERT ON app_termmeta
FOR EACH ROW
BEGIN
    IF :NEW.meta_value IS NULL THEN
        :NEW.meta_value := EMPTY_CLOB();
    END IF;
END;
/

/* TABLE: TERM_TAXONOMY  */
CREATE TABLE app_term_taxonomy (
    term_taxonomy_id NUMBER(20, 0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    term_id NUMBER(20,0) DEFAULT 0 NOT NULL,
    taxonomy VARCHAR2(32) DEFAULT '' NOT NULL, 
    description CLOB DEFAULT '', 
    parent NUMBER(20, 0) DEFAULT 0 NOT NULL,
    count NUMBER(20,0) DEFAULT 0 NOT NULL,
    
    CONSTRAINT fk_app_term_taxonomy_term FOREIGN KEY (term_id) REFERENCES app_terms(term_id) ON DELETE CASCADE
    -- CONSTRAINT fk_app_term_taxonomy_parent FOREIGN KEY (parent) REFERENCES app_terms(term_id) ON DELETE CASCADE
    
);
CREATE INDEX idx_app_term_taxonomy_term_id ON app_term_taxonomy( term_id );

-- DROP TABLE app_term_taxonomy;
-- DROP INDEX idx_app_term_taxonomy_term_id;

-- CREATE TRIGGER 
-- CLOB : EMPTY_CLOB()처리
CREATE OR REPLACE TRIGGER app_term_taxonomy_trigger
BEFORE INSERT ON app_term_taxonomy
FOR EACH ROW
BEGIN
    IF :NEW.description IS NULL THEN
        :NEW.description := EMPTY_CLOB();
    END IF;
END;
/


/* TABLE: TERM_POST_RELATIONSHIPS */
CREATE TABLE app_term_post_relationships (
    object_id NUMBER(20,0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    term_taxonomy_id NUMBER(20, 0) DEFAULT 0 NOT NULL,
    term_order NUMBER DEFAULT 0 NOT NULL,
    
    CONSTRAINT fk_app_term_post_relationships_term_taxonomy_id FOREIGN KEY (term_taxonomy_id) REFERENCES app_term_taxonomy(term_taxonomy_id) ON DELETE CASCADE
);

CREATE INDEX idx_app_term_post_relationships_term_taxonomy_id ON app_term_post_relationships( term_taxonomy_id );

-- DROP TABLE app_term_post_relationships;
-- DROP INDEX idx_app_term_post_relationships_term_taxonomy_id;



-- HR --



/* INSERT : TERMS */
INSERT INTO app_terms ( name, slug, term_group ) VALUES 
( '미분류', '%EB%AF%B8%EB%B6%84%EB%A5%98', 0 );

SELECT * FROM app_terms;



/* INSERt : TERM_TAXONOMY */
-- ALTER TABLE app_term_taxonomy MODIFY term_taxonomy_id GENERATED ALWAYS AS IDENTITY (START WITH 1);
INSERT INTO app_term_taxonomy ( term_id, taxonomy, description, parent, count ) VALUES 
( 1, 'category', EMPTY_CLOB(), 0, 1 );
SELECT * FROM app_term_taxonomy;



/* INSERt : USERS */
INSERT INTO app_users ( user_email, user_pass, user_nicname, user_activation_key, user_registered, user_status ) VALUES 
( 'oppaho03@gmail.com', '', '', '', SYSDATE, 0 );

SELECT * FROM app_users;
