/* Basic Grammar

-- DATA TYPES
* 문자형 데이터의 'N'의 의미는, 'N' 은 유니코드(Unicode) 문자 집합을 지원, '' 은 문자는 숫자와 영어, 특수문자, 제어문자까지 총 128개만 지원
CLOB : LongText or TEXT 
CLOB : 빈값 EMPTY_CLOB() | 값 TO_CLOB('값') 
TIMESTAMP: SYSDATE (값, 현재 일자)
> 컬럼값) TO_TIMESTAMP('1970-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
> 삽입값)TO_TIMESTAMP('2025-02-10 15:30:00', 'YYYY-MM-DD HH24:MI:SS'));
DATE 
> 컬럼값) TO_DATE('1970-01-01', 'YYYY-MM-DD'))
> 컬럼값) TO_DATE('2025-02-10', 'YYYY-MM-DD')

-- 테이블 생성
CREATE TABLE ( ... );

-- 테이블 컬럼 
DEFAULT : 컬럼명 타입 DEFAULT [값]
CHECK : 컬렴명 CHECK( is_active 
| 컬럼명 CHAR(1) CHECK (컬럼명 IN ('Y', 'N'))
| 컬럼명 NUMBER(1) CHECK (컬럼명 IN (0, 1)) DEFAULT 1 NOT NULL

* AUTO_INCREMENT(자동증가)
GENERATED ALWAYS AS IDENTITY ( 자동 입력만 허용 )
GENERATED BY DEFAULT AS IDENTITY ( 수동/자동 입력 허용 )
* 자동증가 카운터 1로 초기화
> TRUNCATE TABLE 테이블_이름 
> ALTER TABLE 테이블_이름 MODIFY 컬럼명 GENERATED ALWAYS AS IDENTITY (START WITH 1);

NULL | NOT NULL : 컬럼명 타입 DEFAULT [값] NULL[or NOT NULL]
UNIQUE : 컬럼명 타입 [,기본값] UNIQUE

-- 테이블 컬럼 : 기본 키 (PK, PRIMARY KEY)
PRIMARY KEY : 컬럼명 타입 [,기본값] PRIMARY KEY
CONSTRAINT PK_별칭 PRIMARY KEY (컬럼1, 컬럼2, ...)

ALTER TABLE 테이블_이름 ADD CONSTRAINT PK_별칭 PRIMARY KEY (컬럼)
ALTER TABLE 테이블_이름 DROP CONSTRAINT PK_별칭; (*삭제)


-- 테이블 컬럼 : 외래키 (FK, FOREIGN KEY)
CASCADE : 개체 변경/삭제 시 다른 개체가 대상 개체를 참조하고 있을 경우 함께 삭제
RESTRICT : 개체 변경/삭제 시 다른 개체가 대상 개체를 참조하고 있을 경우 변경/삭제가 취소(제한)
SET NULL : 개체 변경/삭제 시 다른 개체가 대상 개체를 참조하고 있을 경우 NULL 로 설정
CONSTRAINT FK_별칭 FOREIGN KEY (자식컬럼명) REFERENCES 부모테이블(부모컬럼명) ON DELETE [CASCADE|CASCADE|SET NULL];

ALTER TABLE 테이블_이름 ADD CONSTRAINT PK_별칭 FOREIGN KEY (컬럼)
ALTER TABLE 테이블_이름 DROP CONSTRAINT FK_별칭; (*삭제)

-- 테이블 컬럼 : 인덱스(INDEX) 생성|삭제
CREATE INDEX 인덱스_이름 ON 테이블_이름 (컬럼1, 컬럼2, ...);
DROP INDEX 인덱스_이름;

-- 테이블 컬럼 수정 
ALTER TABLE 테이블_이름 MODIFY 컬럼명 값(타입/기본값/조건 등);


-- 제약 조건 확인 및 삭제 
SELECT constraint_name, table_name
FROM user_constraints
WHERE table_name = '__테이블_이름__' AND constraint_type = 'U';
ALTER TABLE __테이블_이름__ DROP CONSTRAINT __조건이름__;

*/

/* SEQUENCE 생성
-- AUTO_INCRMENT 대체 시퀀스(SEQUENCE)
-- START WITH 1 : 시작값 
-- INCREMENT BY 1 : 증가값 (+1)
-- MINVALUE 1 : 최소값 
-- MAXVALUE 9999 : 최댓값 
-- NOCACHE : CACHE 사용 유무
-- NOCYCLE : 최댓값 도달 시 시작값 부터 다시 반복 여부 
-- NOORDER : 요청 순서대로 값을 생성할지 여부 

-- SEQUENCE 삭제
DROP SEQUENCE 시퀀스명;

-- SEQUENCE 현재 값 확인 
SELECT 시퀀스명.CURRVAL FROM DUAL;

-- SEQUENCE 값 초기화 
DROP SEQUENCE -> CREATE SEQUENCE
*/

CREATE SEQUENCE __NAME
START WITH 1 
INCREMENT BY 1 
NOCACHE 
NOCYCLE;

/* TRIGGER 생성

CREATE [OR REPLACE] Trigger 트리거명
  Before (or After)
  UPDATE OR DELETE OR INSERT ON 테이블명 --Trigger_event
  [FOR EACH ROW]
DECLARE
  --변수선언부
BEGIN
  --프로그램 코딩부
END;

-- TRIGGER 삭제
DROP TRIGGER [IF EXISTS] 트리거명;

*/
-- TRIGGER : AUTO INCREMENT
CREATE OR REPLACE TRIGGER 트리거명 
BEFORE INSERT ON 테이블명 
FOR EACH ROW 
WHEN (NEW.컬럼명 IS NULL)
BEGIN 
    SELECT 시퀀스명.NEXTVAL INTO :NEW.컬럼명 FROM DUAL;
END; 
/

-- TRIGGER : CLOB 데이터 타입 '' 값 처리
CREATE OR REPLACE TRIGGER 트리거명 
BEFORE INSERT ON 테이블명 
FOR EACH ROW 
WHEN (NEW.id IS NULL)
BEGIN 
    IF :NEW.컬럼명 IS NULL THEN
        :NEW.컬럼명 := EMPTY_CLOB();
    END IF;
END; 
/
